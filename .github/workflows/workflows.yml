---
name: "CI build and test jobs"

on:
  pull_request:
    branches-ignore:
      - /doc\/.*/
    tags:
      - /.*/
  push:
    branches-ignore:
      - /doc\/.*/
    tags:
      - /.*/

jobs:
  cache_test_data:
    runs-on: ubuntu-latest
    steps:
      - name: "Make cachedir"
        run: |
          mkdir -p /tmp/.cache/data && \
          chmod 777 /tmp/.cache/data

      - name: Set git ID
        run: |
          git config --global user.name 'Fitlins GH-Action User' && \
          git config --global user.email 'shashankbansal56@gmail.com'

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          sudo apt-get update -y && sudo apt-get upgrade -y
          sudo apt-get install -y git git-annex
          python -m pip install --upgrade pip
          pip install datalad

      - name: WTF!?
        run: |
         datalad wtf

      - name: "cached data"
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.cache/data
          key: ds003-v1-${{ runner.os }}-${{ github.job }}
          restore-keys: |
            ds003-v1-${{ runner.os }}-
            ds003-v1-
            ds003-

      - name: "Install fMRIPrep derivatives of ds000003 and reference data"
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          cd /tmp/.cache/data
          datalad install -r -s https://gin.g-node.org/shashankbansal56/fitlins_tests
          # datalad update --merge fitlins_tests
          cd fitlins_tests
          datalad get ds003/fmriprep/sub-0{1,2,3}/func/*_space-MNI152NLin2009cAsym_desc-*.nii.gz \
                                    ds003/fmriprep/sub-0{1,2,3}/func/*_desc-confounds_*.tsv \
                                    ds003/fmriprep/dataset_description.json \
                                    ds003/fmriprep/sub-*/*/*.json
          datalad get -r ds003/nistats_smooth/ ds003/afni_smooth/ ds003/afni_blurto/ ds003/nistats_blurto/

  build_docs:
    runs-on: ubuntu-latest
    steps:
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Check python version and upgrade pip
        run: |
          python --version
          python -m pip install -U pip setuptools

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - uses: actions/checkout@v2
      - name: Install fitlins
        run: |
          cd $GITHUB_WORKSPACE
          pip install ".[docs]"

      - name: Build docs
        run: |
          cd $GITHUB_WORKSPACE
          make html
          ls
          pwd

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs/_build/html

  run_pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display python version
        run: |
          python --version
          python -m pip install --upgrade pip

      - name: Install fitlins
        run: |
          pip install ".[test]"

      - name: Run pytest
        timeout-minutes: 120
        run: |
          mkdir -p /tmp/pytestcov
          chmod 777 /tmp/pytestcov
          pytest --cov=./ --cov-report=xml \
          --cov-config docker/multiproc.coveragerc \
          --ignore-glob=fitlins/tests/* .

      - name: Submit pytest coverage
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          files: ./coverage1.xml,./coverage2.xml
          name: fitlins
          path_to_write_report: ./coverage/codecov_report.txt
